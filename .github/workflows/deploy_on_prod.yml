name: Build and Deploy to ECR (Production)

on:
  release:
    types:
      - created

env:
  AWS_ECR_REPO: 805071309209.dkr.ecr.us-east-1.amazonaws.com/tax-wizard-ecr
  ECR_REPOSITORY: tax-wizard-ecr # set this to your Amazon ECR repository name
  ECS_CLUSTER: t-w
  ECS_SERVICE: tw
  ECS_TASK_DEFINITION_FAMILY: tax-w1
  ECS_TASK_DEFINITION: task-definition.json # set this to the path to your Amazon ECS task definition                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: tw1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Replace with your AWS region

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      # - name: Register a new revision of the task definition
      #   run: |
      #     aws ecs register-task-definition --family $ECS_TASK_DEFINITION_FAMILY --image ${{ env.AWS_ECR_REPO }}:latest

      - name: Fetch Latest Task Definition ARN
        id: fetch-task-def
        run: |
          # Fetch the latest revision of the ECS task definition ARN
          latest_task_def_arn=$(aws ecs describe-services --cluster $ECS_CLUSTER --services $ECS_SERVICE --query 'services[0].taskDefinition' --output text)
          echo "::set-output name=latest_task_def_arn::${latest_task_def_arn}"

      - name: Update ECS Service
        run: |
          # Update ECS service with the latest task definition
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --task-definition ${{ steps.fetch-task-def.outputs.latest_task_def_arn }}

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
